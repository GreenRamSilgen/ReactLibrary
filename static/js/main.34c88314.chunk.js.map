{"version":3,"sources":["history.js","components/Header.js","components/SingleBookDisplay.js","components/Home.js","components/Search.js","Root.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","Header","className","href","React","Component","SingleBookDisplay","props","state","read","singleBook","toggleRead","bind","this","readStatusChange","setState","src","imgUrls","thumbnail","alt","title","authors","language","toString","toUpperCase","publishDate","publisher","pageCount","description","type","onClick","ShelfBook","book","singleImgClicked","handleBookRemove","Home","myBooks","localStorage","getItem","JSON","parse","displaySingle","singleBookToDisplay","sortTitle","readType","singleBookClicked","changeSingleBookRead","removeSingleBook","filterSubmit","idxToChange","findIndex","key","myBooksCpy","setItem","stringify","splice","e","preventDefault","console","log","refs","abSort","value","displayRead","onChange","htmlFor","id","name","ref","sort","a","b","map","Result","popUp","storeBook","bookAdded","popModal","popUpActivator","counter","pop","timer","myLibraryCount","myLibrary","push","bookCards","bookResults","idx","currentbook","Search","results","searchQuery","handleChange","handleSubmit","event","target","resultsCopy","fetch","then","res","json","response","items","forEach","bookInfo","volumeInfo","bookObj","undefined","imageLinks","publishedDate","onSubmit","placeholder","Root","loading","loc","location","pathname","Boolean","window","hostname","match","App","history","basename","process","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.34c88314.chunk.js","sourcesContent":["import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory();","import React from 'react';\r\n\r\nexport class Header extends React.Component{\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"navbar-header nav--spacer\">\r\n                        <ul className=\"nav navbar-nav\">\r\n                            <li><a href=\"/home\">Home</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"navbar-header nav--spacer\">\r\n                        <ul className=\"nav navbar-nav\">\r\n                            <li><a href=\"/search\">Search</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './componentCSS/singlebook.css'\r\n\r\nexport class SingleBookDisplay extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            read: (this.props.singleBook.read) ? true : false,\r\n        }\r\n\r\n        this.toggleRead = this.toggleRead.bind(this);\r\n    }\r\n\r\n    toggleRead(){\r\n        this.props.readStatusChange();        \r\n        this.setState({\r\n            read: !(this.state.read),\r\n        });\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"singleBookConent\">\r\n                <div className=\"singleBookLeft\">\r\n                    <div className=\"singleBookImgHolder\">\r\n                        <img src={(this.props.singleBook.imgUrls) ? this.props.singleBook.imgUrls.thumbnail : \"https://icon-library.com/images/icon-book/icon-book-14.jpg\"} alt={(this.props.singleBook.imgUrls) ? \"image of book titled \" + this.props.singleBook.title : \"No Image\"}/>\r\n                    </div>\r\n                    <div className=\"singleBookInfo\">\r\n                        <h3>{this.props.singleBook.title}</h3>\r\n                        <h5>By {this.props.singleBook.authors[0]}</h5>\r\n                        <p>Lang: {this.props.singleBook.language.toString().toUpperCase()}</p>\r\n                        <p>Publish Date: {this.props.singleBook.publishDate}</p>\r\n                        <p>Publisher: {this.props.singleBook.publisher}</p>\r\n                        <p>Pages: ( {this.props.singleBook.pageCount} )</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"singleBookDescription\">\r\n                    <h4>Description:</h4>\r\n                    <h5>{this.props.singleBook.description}</h5>\r\n                </div>\r\n                <div className=\"singleBookButtons\">\r\n                    <h4>Status: {(this.state.read) ? \"Read\" : \"Not Read\"}</h4>\r\n                    <button type=\"button\" className=\"btn btn-info\" onClick={this.toggleRead}>Change Status</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './componentCSS/home.css'\r\nimport {SingleBookDisplay} from './SingleBookDisplay'\r\n\r\n\r\nclass ShelfBook extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className={(this.props.book.read)?\"shelfBook read\" : \"shelfBook\"}>\r\n                <div className=\"shelfBookLeft\">\r\n                    <img className=\"singleBookImg\"onClick={this.props.singleImgClicked} src={(this.props.book.imgUrls) ? this.props.book.imgUrls.thumbnail : \"https://icon-library.com/images/icon-book/icon-book-14.jpg\"} alt={(this.props.book.imgUrls) ? \"image of book titled \" + this.props.book.title : \"No Image\"}/>\r\n                    <button type=\"button\" className=\"btn btn-danger shelfBtn\" onClick={this.props.handleBookRemove}>Remove</button>\r\n                </div>\r\n            <div className=\"bookPlaque\">\r\n                <h5 className=\"bookTitle\">{this.props.book.title}</h5>\r\n                <p>By: {this.props.book.authors[0]} </p>\r\n                <p>Lang: {this.props.book.language.toString().toUpperCase()}</p>\r\n                <p>Publish:{this.props.book.publisher}</p>\r\n                <p>Publish Date: {this.props.book.publishDate}</p>\r\n                \r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class Home extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            myBooks: (localStorage.getItem(\"myLibrary\")) ? JSON.parse(localStorage.getItem(\"myLibrary\")) : [],\r\n            displaySingle: false,\r\n            singleBookToDisplay: '',\r\n            sortTitle: \"true\", //true = a->z , false = z->a\r\n            readType: \"All\", //readOnly,  unreadOnly , All\r\n        }\r\n\r\n\r\n        this.singleBookClicked = this.singleBookClicked.bind(this);\r\n        this.changeSingleBookRead = this.changeSingleBookRead.bind(this);\r\n        this.removeSingleBook = this.removeSingleBook.bind(this);\r\n        this.filterSubmit = this.filterSubmit.bind(this);\r\n    }\r\n\r\n    singleBookClicked(book){\r\n        this.setState({\r\n            displaySingle: true,\r\n            singleBookToDisplay: book,\r\n        });\r\n    }\r\n\r\n    changeSingleBookRead(){\r\n        let idxToChange = this.state.myBooks.findIndex(book => book.key === this.state.singleBookToDisplay.key);\r\n        let myBooksCpy = this.state.myBooks;\r\n        myBooksCpy[idxToChange].read = !myBooksCpy[idxToChange].read;\r\n        localStorage.setItem(\"myLibrary\",JSON.stringify(myBooksCpy));\r\n    }\r\n\r\n    removeSingleBook(key){\r\n        let idxToChange = this.state.myBooks.findIndex(book => book.key === key);\r\n        let myBooksCpy = this.state.myBooks;\r\n        myBooksCpy.splice(idxToChange,1);\r\n\r\n        this.setState({myBooks: myBooksCpy});\r\n        localStorage.setItem(\"myLibrary\", JSON.stringify(myBooksCpy));\r\n    }\r\n\r\n\r\n    filterSubmit(e){\r\n        e.preventDefault();\r\n        console.log(this.refs.abSort.value);\r\n        this.setState({\r\n            sortTitle: this.refs.abSort.value,\r\n            readType: this.refs.displayRead.value,\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        if(this.state.displaySingle){\r\n            return (\r\n                <SingleBookDisplay singleBook={this.state.singleBookToDisplay} readStatusChange={this.changeSingleBookRead}/>\r\n            );\r\n        }\r\n        else{\r\n        return (\r\n            <div className=\"homeContent\">\r\n            <div className=\"homeHeader\">\r\n                MY BOOKS:\r\n            </div>\r\n\r\n\r\n            <form onChange={this.filterSubmit}>\r\n                <label htmlFor=\"sortBy\">Sort By: </label>\r\n                <select id=\"sortBy\" name=\"sortBy\" ref=\"abSort\">\r\n                    <option value=\"true\">A-Z</option>\r\n                    <option value=\"false\">Z-A</option>\r\n                </select>\r\n\r\n                <label htmlFor=\"displayRead\">Display:</label>\r\n                <select id=\"displayRead\" name=\"displayRead\" ref=\"displayRead\">\r\n                    <option value=\"All\">All</option>\r\n                    <option value=\"readOnly\">Read</option>\r\n                    <option value=\"unreadOnly\">Unread</option>\r\n                </select>\r\n            </form>\r\n\r\n            \r\n            <div className=\"bookShelf\">\r\n                {this.state.myBooks.sort((a,b) =>{//sort based on state\r\n                    if(this.state.sortTitle ===\"true\") return (a.title > b.title)?1:-1;\r\n                    return (a.title>b.title)?-1:1;\r\n                }).map((book)=>{//display read only \r\n                    if(this.state.readType === \"readOnly\"){\r\n                        return (book.read) ? book : null; \r\n                    }else if(this.state.readType === \"unreadOnly\"){\r\n                        return (book.read) ? null : book;\r\n                    }\r\n                    else{\r\n                        return book;\r\n                    }\r\n                }).map((book)=>{\r\n                    if(book === null) return null;\r\n                    return(\r\n                        <ShelfBook key={book.key} book={book} singleImgClicked={() => this.singleBookClicked(book)} handleBookRemove={()=>this.removeSingleBook(book.key)}/>\r\n                    )\r\n                })}\r\n                </div>\r\n            </div>\r\n        )\r\n            }\r\n    }\r\n}","import React from 'react';\r\nimport './componentCSS/search.css'\r\n\r\nclass Result extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            popUp: false,\r\n        }\r\n        this.storeBook = this.storeBook.bind(this);\r\n        this.bookAdded = this.bookAdded.bind(this);\r\n        this.popModal = this.popModal.bind(this);\r\n        this.popUpActivator = this.popUpActivator.bind(this);\r\n\r\n        this.counter = 0;\r\n        this.pop = null;\r\n        this.timer = true;\r\n    }\r\n\r\n    storeBook(e, book){\r\n        let myLibraryCount = (localStorage.getItem(\"myLibraryCount\")) ? JSON.parse(localStorage.getItem(\"myLibraryCount\")):0;\r\n        let myLibrary = (localStorage.getItem(\"myLibrary\")) ? JSON.parse(localStorage.getItem(\"myLibrary\")) : [];\r\n        \r\n        book.read = false;\r\n        book.key = myLibraryCount;\r\n        myLibrary.push(book);\r\n        myLibraryCount++;\r\n        \r\n        \r\n        localStorage.setItem(\"myLibraryCount\",JSON.stringify(myLibraryCount));\r\n        localStorage.setItem(\"myLibrary\",JSON.stringify(myLibrary));\r\n        this.counter++;\r\n        this.popModal();\r\n        this.popUpActivator();\r\n    }\r\n    \r\n    popModal(){\r\n        this.setState({\r\n            popUp: !this.state.popUp,\r\n        })\r\n    }\r\n\r\n\r\n    bookAdded(){\r\n        this.timer = !this.timer;\r\n        return(\r\n            <div className={\"bookAddedModal rando\"+this.timer}>\r\n                <p>Book Added To Your Library!</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    popUpActivator(){\r\n        if(this.state.popUp && this.counter > 0){\r\n            console.log(\"YO\");\r\n            this.pop =this.bookAdded();\r\n        }else if(!this.state.popUp && this.counter > 0){\r\n            console.log(\"lele\");\r\n            this.pop = this.bookAdded();\r\n        }\r\n    }\r\n    render(){\r\n        let bookCards = this.props.bookResults.map((book, idx)=>{\r\n            return (\r\n            <div className=\"bookCard\" key={idx}>\r\n                <div className=\"bookPicture\">\r\n                    <img src={(book.imgUrls) ? book.imgUrls.thumbnail : \"https://icon-library.com/images/icon-book/icon-book-14.jpg\"} alt={(book.imgUrls) ? \"image of book titled \" + book.title : \"No Image\"}/>\r\n                </div>\r\n                <div className=\"bookInfo\">\r\n                    <div className=\"bookInfoHead\">\r\n                        <div className=\"bookInfoHead__left\">\r\n                        <h3>{book.title}</h3>\r\n                        <h5>By {book.authors[0]}</h5>\r\n                        <p>Lang: {book.language.toString().toUpperCase()}</p>\r\n                        </div>\r\n                        <div className=\"bookInfoHead__right\">\r\n                            <p>Publish Date: {book.publishDate}</p>\r\n                            <p>Publisher: {book.publisher}</p>\r\n                        <p>Pages: ( {book.pageCount} )</p>\r\n                        </div>\r\n                    </div>\r\n                <hr/>\r\n                <p>{book.description}</p>\r\n                </div>\r\n                <div className=\"addBookBtn\">\r\n                <button type=\"button\" className=\"btn btn-success\" onClick={(e)=> this.storeBook(e, book)} currentbook={book}>ADD TO MY LIBRARY</button>\r\n                </div>\r\n            </div>\r\n            );\r\n        });\r\n        return (\r\n        <div>\r\n            {this.pop}\r\n            {bookCards}\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport class Search extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            results: [],\r\n        }\r\n\r\n        this.searchQuery = '';\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        this.searchQuery = event.target.value;\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        let resultsCopy = [];\r\n        \r\n\r\n        fetch(\"https://www.googleapis.com/books/v1/volumes?q=\"+this.searchQuery).then(res => res.json()).then((response) =>{\r\n        if(!response.items) return;    \r\n        response.items.forEach((book)=>{\r\n                let bookInfo = book.volumeInfo;\r\n                let bookObj = {\r\n                    title: (bookInfo.title) ? bookInfo.title : \"N/A\",\r\n                    authors: (bookInfo.authors) ? bookInfo.authors : [\"N/A\"],\r\n                    description: (bookInfo.description) ? bookInfo.description : \"No description available.\",\r\n                    pageCount: (bookInfo.pageCount) ? bookInfo.pageCount : \"---\",\r\n                    imgUrls: (bookInfo.imageLinks === undefined) ? null : bookInfo.imageLinks,\r\n                    language: (bookInfo.language) ? bookInfo.language : \"---\",\r\n                    publisher: (bookInfo.publisher) ? bookInfo.publisher : \"---\",\r\n                    publishDate: (bookInfo.publishedDate) ? bookInfo.publishedDate : \"---\",\r\n                };\r\n                resultsCopy.push(bookObj);\r\n            });\r\n        }).then(()=>{\r\n            this.setState({\r\n                results: resultsCopy,\r\n            });\r\n            console.log(this.state.results);\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"searchPageContent\">\r\n            <div className=\"searchBar\">\r\n                <form className=\"form-inline\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" onChange={this.handleChange} placeholder=\"Search Book Here\"/>\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Search\"/>\r\n                </form>\r\n            </div>\r\n            <div className=\"resultDisplay\">\r\n                {<Result bookResults={this.state.results}/>}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport {Header} from './components/Header';\nimport {Home} from './components/Home'\nimport { Search } from './components/Search';\n\nexport class Root extends React.Component{\n  render()\n  {\n    let loc = this.props.location.pathname;\n    let loading;\n    if(loc === \"/home\"){\n      loading = <Home/>\n    }\n    else if(loc === \"/search\"){\n      loading = <Search/>\n    }\n    else{\n      loading = <Home/>\n    }\n    return (\n      <div className=\"container\">\n        <div className=\"row bar\">\n          <div className=\"col-xs-10 col-xs-offset-1\">\n            <Header />\n          </div>\n        </div>\n        <div className=\"row back\">\n          <div className=\"content\">\n            {loading}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Router, Route} from 'react-router';\nimport history from './history';\n\nimport './index.css';\nimport {Root} from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nclass App extends React.Component{\n  render(){\n    return(\n      <Router history={history} basename={process.env.PUBLIC_URL}>\n        <Route exact path={\"/ReactLibrary\"} component={Root}/>\n        \n        <Route path={\"/home\"} component={Root}/>\n        <Route path={\"/search\"} component={Root}/>\n      </Router>\n    );\n  }\n}\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}